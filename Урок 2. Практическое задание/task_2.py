"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
def count_num(number, even, odd):
    # базовый случай - число пустое
    if not number:
        return even, odd

    else:
        # достаем последню цифру
        last_digit = number % 10

        # считаем четность и нечетность
        if last_digit % 2 == 0:
            even += 1
        else:
            odd += 1

        # рекурсивный вызов
        return count_num(number // 10, even, odd)

try:
    number = int(input("Введите число: "))
    even, odd = count_num(number, 0, 0)
    print(f"Количество четных цифр = {even}, нечетных цифр = {odd}.")
except ValueError:
    print("Ошибка: введено не число. Попробуйте снова.")