"""
Задание 2.

Попытайтесь выполнить профилирование памяти в любом скрипте с рекурсией.

Вам нужно обнаружить проблему в процессе этого. Но проблема связана не с тем,
что рекурсия потребляет много памяти, а с самим процессом замеров.

Опищите эту проблему и найдите простой путь ее решения.
Опишите этот путь и покажите его применение
"""
import sys
from memory_profiler import profile
import tracemalloc
import time  # Для задержки

# Устанавливаем лимит рекурсии для демонстрации
sys.setrecursionlimit(10000)

# Рекурсивная функция для вычисления факториала
def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

# Проблема с memory_profiler: она может неправильно замерять память при глубокой рекурсии
@profile
def test_with_memory_profiler():
    print(factorial(1000))  # Вызов рекурсивной функции

# Решение с tracemalloc: точное измерение памяти
def test_with_tracemalloc():
    tracemalloc.start()  # Начинаем отслеживание памяти

    result = factorial(1000)  # Вызов рекурсивной функции

    # Задержка: ждем завершения рекурсии, чтобы зафиксировать изменения
    time.sleep(1)  # Задержка на 1 секунду

    # Получаем данные о памяти
    current, peak = tracemalloc.get_traced_memory()
    print(f"Текущая память: {current / (1024 * 1024)} MiB")
    print(f"Пиковая память: {peak / (1024 * 1024)} MiB")

    tracemalloc.stop()  # Останавливаем отслеживание памяти

if __name__ == "__main__":
    # Демонстрация с memory_profiler
    print("Профилирование с memory_profiler:")
    test_with_memory_profiler()

    # Демонстрация с tracemalloc
    print("\nПрофилирование с tracemalloc:")
    test_with_tracemalloc()

"""
Заключение:
Проблема с memory_profiler:
Когда вы используете memory_profiler, вы можете увидеть малые или даже неверные результаты,
так как он может не учитывать глубокие рекурсивные вызовы и связанные с ними стековые фреймы.

Решение с tracemalloc:
Используя tracemalloc, мы получаем более точные данные о том, сколько памяти действительно использует рекурсивная функция.

Заключение:
Этот пример демонстрирует, как проблемы с профилированием памяти могут возникать при работе с рекурсивными 
функциями и как tracemalloc помогает эффективно отслеживать использование памяти в таких ситуациях..
"""