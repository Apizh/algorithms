"""
Задание 2.

Попытайтесь выполнить профилирование памяти в любом скрипте с рекурсией.

Вам нужно обнаружить проблему в процессе этого. Но проблема связана не с тем,
что рекурсия потребляет много памяти, а с самим процессом замеров.

Опищите эту проблему и найдите простой путь ее решения.
Опишите этот путь и покажите его применение
"""
from memory_profiler import profile


# Рекурсивная функция для вычисления факториала
def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)


@profile
def run_factorial(n):
    return factorial(n)


# Запускаем тестовую функцию с профилированием памяти
print(run_factorial(100))

"""
Рекурсия и профилирование: 
При рекурсивных вызовах будет много выходов с информацией о памяти.
Это может замедлить выполнение программы и усложнить анализ.

Оптимизация замеров: 
Чтобы избежать проблемы с избыточными выводами, 
нужно профилировать только ключевые участки программы или только основную функцию, 
которая управляет рекурсией.
"""
